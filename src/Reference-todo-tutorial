
const App = () => {
//This creates a todo element that allows you to put items in an array.
const [todos, setTodos] = useState([]);

//This adds a todo item
function addTodo (todo){
  setTodos([todo, ...todos]);
}


//This creates one Todo 
function Todo({ todo }) {
  return (
    <div style={{ display: "flex" }}>
      <li> {todo.task}</li>
      <Delete />
    </div>
  );
}

//Todo form
function TodoForm({ addTodo }) {
  const [todo, setTodo] = useState({
    id: "",
    task: "",
    completed: false,
  });

  //this updates the task property in the todo object
  function handleTaskInputChange(e) {
    setTodo({ ...todo, task: e.target.value });
  }

  function handleSubmit(e) {
    e.preventDefault();
    if (todo.task.trim()) {
      addTodo({ ...todo, id: uuid() });
      //reset task input
      setTodo({ ...todo, task: "" });
    }
  }
  return (
    <form onSubmit={handleSubmit}>
      <input
        name="task"
        type="text"
        value={todo.task}
        onChange={handleTaskInputChange}
      />
      <button> Add task</button>
    </form>
  );
}

//Todo List

function TodoList({ todos }) {
  return (
    <ul>
      {todos.map((todo) => (
        <Todo key={todo.id} todo={todo} />
      ))}
    </ul>
  );
}

//HTML elements

  return (
    <div>
      <CssBaseline />
      <AppBar position="relative">
        <Toolbar>
          <EmojiEvents />
          <Typography variant="h6">smol wins</Typography>
        </Toolbar>
      </AppBar>

      <main>
        <div>
          <Container>
            <Typography variant="h4" align="center" gutterbottom>
              React todo tutorial
            </Typography>
            <TodoForm addTodo={addTodo} />
            <TodoList todos={todos} />
          </Container>

          <Container>
            <Typography variant="h4" align="center" gutterbottom>
              Small Wins Tracker
            </Typography>
          </Container>